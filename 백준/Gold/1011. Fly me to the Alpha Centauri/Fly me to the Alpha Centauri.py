'''
d   이동패턴        작동 횟수    반복횟수 
1   1               1           1
2   11              2           1

3   111             3           2
4   121             3           2
5   1211            4           2
6   1221            4           2

7   12211           5           3
8   12221           5           3
9   12321           5           3
10  123211          6           3
11  123221          6           3
12  123321          6           3

13  1233211         7           4
14  1233221         7           4
15  1233321         7           4
16  1234321         7           4
17  12343211        8           4
18  12343221        8           4
19  12343321        8           4
20  12344321        8           4

21  123443211       9           5
22  123443221       9           5
23  123443321       9           5
24  123444321       9           5
25  123454321       9           5
'''
# 테스트 케이스 개수 T 받기
T = int(input())
# T만큼 반복
for _ in range(T):
    # x지점과 y지점 입력 받음(0<=x<y)
    x,y = map(int, input().split())
    # x지점과 y지점 사이의 거리 d를 구한다.
    d = y-x
    # 위의 패턴 표에서 최소한의 공간이동 장치 작동 횟수가
    # 얼마나 반복되는지를 세는 반복 횟수 n을 0으로 초기화
    n = 0
    # 무한반복
    while 1:
        # 만약 거리 d가 n*(n+1)보다 크거나 같으면
        if n*(n+1) >= d:
            # 브레이크
            break
        # 아니면 n에 1을 더한다.
        n+=1
    # 만약 거리 d가 반복 횟수 n의 제곱보다 크다면
    if d > n**2:
        # 최소한의 공간이동 장치 작동횟수는 n*2이다.
        print(n*2)
    # 아니라면
    else:
        # n*2-1이다.
        print(n*2-1)