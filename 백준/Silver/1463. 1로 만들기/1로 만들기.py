# dp 기본문제
x = int(input())
d = [0] * 1000001

# 1은 이미 1이므로 d[1]은 0이다
for i in range(2, x+1):
    # 계산 횟수는 지난번 계산 횟수 +1이다
    d[i] = d[i-1]+1

    # 만약 i가 2일때, d[2]는 1이다.
    pass

    # 만약 i가 3일때, d[3]은 3이다. 하지만 한번만 3으로 나누면 된다. -> 최종 d[3] = 1
    if i%3 == 0:
        d[i] = min(d[i], d[i//3]+1)

    # 만약 i가 4일때, d[4]는 2이다. 2로 두번 나누면 되니까 2맞다.
    pass

    # 만약 i가 5일때, d[5]는 3이다. -1하고 2로 두번 나누면 되니까 2맞다.
    pass

    # 만약 i가 6일때, d[6]은 4이다. 다만 2로 나누고 3으로 나누면 되니 사실은 2여야 된다.
    # 위의 i%3 == 0 을 통과하면 d[6]은 min(4,2)이므로 2다.
    pass

    # 만약 i가 7일때, d[7]은 3이다. -1하고 2, 3으로 각각 한번씩 나누면 되니 3이 맞다.
    pass

    # 만약 i가 8일때, d[8]은 4다. 하지만 2로 3번 나눠야 되니 사실은 3이어야 된다.
    # 2로 나누면 d[4], 즉 2가 된다. 2에서 1번 더 하면 3이니 끝난다.
    if i%2 == 0:
        d[i] = min(d[i], d[i//2]+1)

    # 이후는 위의 계산들로 해결 가능하다.
print(d[x])